// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ReportsColumns holds the columns for the "reports" table.
	ReportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"success", "failed"}},
		{Name: "s3_file", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "script_reports", Type: field.TypeUUID},
	}
	// ReportsTable holds the schema information for the "reports" table.
	ReportsTable = &schema.Table{
		Name:       "reports",
		Columns:    ReportsColumns,
		PrimaryKey: []*schema.Column{ReportsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reports_scripts_reports",
				Columns:    []*schema.Column{ReportsColumns[6]},
				RefColumns: []*schema.Column{ScriptsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ScriptsColumns holds the columns for the "scripts" table.
	ScriptsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "hostname", Type: field.TypeString},
		{Name: "notify", Type: field.TypeBool, Default: false},
		{Name: "last_run", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ScriptsTable holds the schema information for the "scripts" table.
	ScriptsTable = &schema.Table{
		Name:       "scripts",
		Columns:    ScriptsColumns,
		PrimaryKey: []*schema.Column{ScriptsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ReportsTable,
		ScriptsTable,
	}
)

func init() {
	ReportsTable.ForeignKeys[0].RefTable = ScriptsTable
}
